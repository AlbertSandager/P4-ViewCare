#include "SPI.h" // necessary library
int ss = 10; // using digital pin 10 for SPI slave select

long data[801] = {0,32,5,-23,9,42,14,-14,19,51,24,-4,28,61,33,5,38,70,42,15,47,79,52,24,56,89,61,33,65,98,70,42,75,107,79,51,84,116,88,60,93,125,97,69,102,134,106,78,110,143,115,87,119,151,123,96,128,160,132,104,136,168,140,112,145,177,149,121,153,185,157,129,161,193,165,137,169,201,173,144,176,208,180,152,184,216,188,159,191,223,195,167,198,230,202,174,205,237,209,180,212,244,215,187,219,250,222,193,225,257,228,200,231,263,234,206,237,268,240,211,243,274,245,217,248,279,251,222,253,285,256,227,258,289,261,232,263,294,265,236,267,298,269,240,271,302,273,244,275,306,277,248,279,310,281,251,282,313,284,255,285,316,287,257,288,319,289,260,291,321,292,262,293,323,294,264,295,325,296,266,296,327,297,267,298,328,298,268,299,329,299,269,299,330,300,270,300,330,300,270,300,330,300,270,300,330,300,270,299,329,299,269,299,328,298,268,298,327,297,267,296,326,296,265,295,324,294,263,293,322,292,261,291,320,289,259,288,317,287,256,285,315,284,253,282,311,281,250,279,308,277,246,275,304,273,242,271,300,269,238,267,296,265,234,263,292,261,229,258,287,256,225,253,282,251,219,248,277,245,214,243,271,240,208,237,266,234,203,231,260,228,197,225,253,222,190,219,247,215,184,212,240,209,177,205,234,202,170,198,227,195,163,191,219,188,156,184,212,180,148,176,204,173,141,169,197,165,133,161,189,157,125,153,181,149,117,145,172,140,108,136,164,132,100,128,156,123,91,119,147,115,83,110,138,106,74,102,129,97,65,93,120,88,56,84,111,79,47,75,102,70,38,65,93,61,29,56,84,52,19,47,75,42,10,38,65,33,1,28,56,24,-9,19,46,14,-18,9,37,5,-28,0,28,-5,-37,-9,18,-14,-46,-19,9,-24,-56,-28,-1,-33,-65,-38,-10,-42,-75,-47,-19,-52,-84,-56,-29,-61,-93,-65,-38,-70,-102,-75,-47,-79,-111,-84,-56,-88,-120,-93,-65,-97,-129,-102,-74,-106,-138,-110,-83,-115,-147,-119,-91,-123,-156,-128,-100,-132,-164,-136,-108,-140,-172,-145,-117,-149,-181,-153,-125,-157,-189,-161,-133,-165,-197,-169,-141,-173,-204,-176,-148,-180,-212,-184,-156,-188,-219,-191,-163,-195,-227,-198,-170,-202,-234,-205,-177,-209,-240,-212,-184,-215,-247,-219,-190,-222,-253,-225,-197,-228,-260,-231,-203,-234,-266,-237,-208,-240,-271,-243,-214,-245,-277,-248,-219,-251,-282,-253,-225,-256,-287,-258,-229,-261,-292,-263,-234,-265,-296,-267,-238,-269,-300,-271,-242,-273,-304,-275,-246,-277,-308,-279,-250,-281,-311,-282,-253,-284,-315,-285,-256,-287,-317,-288,-259,-289,-320,-291,-261,-292,-322,-293,-263,-294,-324,-295,-265,-296,-326,-296,-267,-297,-327,-298,-268,-298,-328,-299,-269,-299,-329,-299,-270,-300,-330,-300,-270,-300,-330,-300,-270,-300,-330,-300,-270,-300,-330,-299,-269,-299,-329,-299,-268,-298,-328,-298,-267,-297,-327,-296,-266,-296,-325,-295,-264,-294,-323,-293,-262,-292,-321,-291,-260,-289,-319,-288,-257,-287,-316,-285,-255,-284,-313,-282,-251,-281,-310,-279,-248,-277,-306,-275,-244,-273,-302,-271,-240,-269,-298,-267,-236,-265,-294,-263,-232,-261,-289,-258,-227,-256,-285,-253,-222,-251,-279,-248,-217,-245,-274,-243,-211,-240,-268,-237,-206,-234,-263,-231,-200,-228,-257,-225,-193,-222,-250,-219,-187,-215,-244,-212,-180,-209,-237,-205,-174,-202,-230,-198,-167,-195,-223,-191,-159,-188,-216,-184,-152,-180,-208,-176,-144,-173,-201,-169,-137,-165,-193,-161,-129,-157,-185,-153,-121,-149,-177,-145,-112,-140,-168,-136,-104,-132,-160,-128,-96,-123,-151,-119,-87,-115,-143,-110,-78,-106,-134,-102,-69,-97,-125,-93,-60,-88,-116,-84,-51,-79,-107,-75,-42,-70,-98,-65,-33,-61,-89,-56,-24,-52,-79,-47,-15,-42,-70,-38,-5,-33,-61,-28,4,-24,-51,-19,14,-14,-42,-9,23,-5,-32,0
};

byte bit24val[3];

void convertLong2bit24vector(long val)
{
  for (int i = 0; i < 3 ; i++) {
    bit24val[i] = lowByte(val);
    val = val >> 8;
  }
}

void setup() {

  pinMode(ss, OUTPUT); // we use this for SS pin
  SPI.begin(); // wake up the SPI bus.
  SPI.setBitOrder(MSBFIRST); //MSB (most significant byte) first
  SPI.setDataMode (SPI_MODE2);
  pinMode(3, INPUT_PULLUP);
  //SPI.setClockDivider(SPI_CLOCK_DIV4);

}


void loop() {


  for (int i = 0; i < 80; i++) {
    convertLong2bit24vector(data[i]);
    digitalWrite(ss, LOW);

    SPI.transfer(0); // send command byte

    SPI.transfer(bit24val[2]);
    SPI.transfer(bit24val[1]);
    SPI.transfer(bit24val[0]);

    digitalWrite(ss, HIGH);

    delayMicroseconds(125);

  }

}
