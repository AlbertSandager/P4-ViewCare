ARM GAS  C:\Users\ALBERT~1\AppData\Local\Temp\ccAn5F0d.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	txChannel,1,1
  20              		.comm	txTD,1,1
  21              		.comm	rxChannel,1,1
  22              		.comm	rxTD,1,1
  23              		.global	txBuffer
  24              		.data
  25              		.align	2
  26              		.type	txBuffer, %object
  27              		.size	txBuffer, 8
  28              	txBuffer:
  29 0000 00       		.byte	0
  30 0001 01       		.byte	1
  31 0002 02       		.byte	2
  32 0003 03       		.byte	3
  33 0004 04       		.byte	4
  34 0005 05       		.byte	5
  35 0006 06       		.byte	6
  36 0007 07       		.byte	7
  37              		.comm	rxBuffer,8,4
  38              		.section	.rodata
  39              		.align	2
  40              	.LC0:
  41 0000 53504920 		.ascii	"SPI Master\000"
  41      4D617374 
  41      657200
  42 000b 00       		.align	2
  43              	.LC1:
  44 000c 6578616D 		.ascii	"example\000"
  44      706C6500 
  45              		.align	2
  46              	.LC2:
  47 0014 4D617374 		.ascii	"Master Rx data:\000"
  47      65722052 
  47      78206461 
  47      74613A00 
  48              		.section	.text.main,"ax",%progbits
  49              		.align	2
  50              		.global	main
  51              		.thumb
ARM GAS  C:\Users\ALBERT~1\AppData\Local\Temp\ccAn5F0d.s 			page 2


  52              		.thumb_func
  53              		.type	main, %function
  54              	main:
  55              	.LFB63:
  56              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
   4:main.c        **** * Version: 1.10
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  This is source code for example project of the SPI Master component.
   8:main.c        **** *  Parameters used:
   9:main.c        **** *   Mode                CPHA == 0, CPOL == 0                
  10:main.c        **** *   Data lines          MOSI+MISO
  11:main.c        **** *   Shift direction     MSB First
  12:main.c        **** *   DataBits:           8 
  13:main.c        **** *   Bit Rate            1 Mbps
  14:main.c        **** *   Clock source        External 
  15:main.c        **** *
  16:main.c        **** *  SPI communication test using DMA. 8 bytes are transmitted
  17:main.c        **** *  between SPI Master and SPI Slave.
  18:main.c        **** *  Received data are displayed on LCD. 
  19:main.c        **** *
  20:main.c        **** ********************************************************************************
  21:main.c        **** * Copyright 2012-2015, Cypress Semiconductor Corporation. All rights reserved.
  22:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
  23:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  24:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  25:main.c        **** * accompanying the software package from which you obtained this software.
  26:main.c        **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  27:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  28:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:main.c        **** *******************************************************************************/
  30:main.c        **** 
  31:main.c        **** #include <project.h>
  32:main.c        **** 
  33:main.c        **** void DmaTxConfiguration(void);
  34:main.c        **** void DmaRxConfiguration(void);
  35:main.c        **** 
  36:main.c        **** /* DMA Configuration for DMA_TX */
  37:main.c        **** #define DMA_TX_BYTES_PER_BURST      (1u)
  38:main.c        **** #define DMA_TX_REQUEST_PER_BURST    (1u)
  39:main.c        **** #define DMA_TX_SRC_BASE             (CYDEV_SRAM_BASE)
  40:main.c        **** #define DMA_TX_DST_BASE             (CYDEV_PERIPH_BASE)
  41:main.c        **** 
  42:main.c        **** /* DMA Configuration for DMA_RX */
  43:main.c        **** #define DMA_RX_BYTES_PER_BURST      (1u)
  44:main.c        **** #define DMA_RX_REQUEST_PER_BURST    (1u)
  45:main.c        **** #define DMA_RX_SRC_BASE             (CYDEV_PERIPH_BASE)
  46:main.c        **** #define DMA_RX_DST_BASE             (CYDEV_SRAM_BASE)
  47:main.c        **** 
  48:main.c        **** #define BUFFER_SIZE                 (8u)
  49:main.c        **** #define STORE_TD_CFG_ONCMPLT        (1u)
  50:main.c        **** 
  51:main.c        **** /* Variable declarations for DMA_TX*/
  52:main.c        **** uint8 txChannel;
ARM GAS  C:\Users\ALBERT~1\AppData\Local\Temp\ccAn5F0d.s 			page 3


  53:main.c        **** uint8 txTD;
  54:main.c        **** 
  55:main.c        **** /* Variable declarations for DMA_RX */
  56:main.c        **** uint8 rxChannel;
  57:main.c        **** uint8 rxTD;
  58:main.c        **** 
  59:main.c        **** /* Data buffers */
  60:main.c        **** uint8 txBuffer [BUFFER_SIZE] = {0x0u, 0x01u, 0x02u, 0x03u, 0x04u, 0x05u, 0x06u, 0x07u};
  61:main.c        **** uint8 rxBuffer[BUFFER_SIZE];
  62:main.c        **** 
  63:main.c        **** /*******************************************************************************
  64:main.c        **** * Function Name: main
  65:main.c        **** ********************************************************************************
  66:main.c        **** * Summary:
  67:main.c        **** *  Main function performs following functions:
  68:main.c        **** *   1. Starts Character LCD and print project info
  69:main.c        **** *   2. Starts SPI Master component
  70:main.c        **** *   3. Configures the DMA transfer for RX and TX directions
  71:main.c        **** *   4. Displays the results on Character LCD
  72:main.c        **** *   
  73:main.c        **** * Parameters:
  74:main.c        **** *  None.
  75:main.c        **** *
  76:main.c        **** * Return:
  77:main.c        **** *  None.
  78:main.c        **** *
  79:main.c        **** *******************************************************************************/
  80:main.c        **** int main()
  81:main.c        **** {
  57              		.loc 1 81 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 8
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 80B5     		push	{r7, lr}
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 7, -8
  64              		.cfi_offset 14, -4
  65 0002 82B0     		sub	sp, sp, #8
  66              		.cfi_def_cfa_offset 16
  67 0004 00AF     		add	r7, sp, #0
  68              		.cfi_def_cfa_register 7
  82:main.c        ****     uint8 i;
  83:main.c        ****     
  84:main.c        ****     UART_USB_Start();
  69              		.loc 1 84 0
  70 0006 FFF7FEFF 		bl	UART_USB_Start
  85:main.c        ****     UART_USB_PutString("SPI Master");
  71              		.loc 1 85 0
  72 000a 2548     		ldr	r0, .L6
  73 000c FFF7FEFF 		bl	UART_USB_PutString
  86:main.c        ****     UART_USB_PutString("example");
  74              		.loc 1 86 0
  75 0010 2448     		ldr	r0, .L6+4
  76 0012 FFF7FEFF 		bl	UART_USB_PutString
  87:main.c        ****     CyDelay(2000u);
  77              		.loc 1 87 0
  78 0016 4FF4FA60 		mov	r0, #2000
ARM GAS  C:\Users\ALBERT~1\AppData\Local\Temp\ccAn5F0d.s 			page 4


  79 001a FFF7FEFF 		bl	CyDelay
  88:main.c        ****     
  89:main.c        ****     DmaTxConfiguration();
  80              		.loc 1 89 0
  81 001e FFF7FEFF 		bl	DmaTxConfiguration
  90:main.c        ****     DmaRxConfiguration();
  82              		.loc 1 90 0
  83 0022 FFF7FEFF 		bl	DmaRxConfiguration
  91:main.c        ****     
  92:main.c        ****     SPIM_Start();
  84              		.loc 1 92 0
  85 0026 FFF7FEFF 		bl	SPIM_Start
  93:main.c        ****     
  94:main.c        ****     CyDmaChEnable(rxChannel, STORE_TD_CFG_ONCMPLT);
  86              		.loc 1 94 0
  87 002a 1F4B     		ldr	r3, .L6+8
  88 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  89 002e 0121     		movs	r1, #1
  90 0030 1846     		mov	r0, r3
  91 0032 FFF7FEFF 		bl	CyDmaChEnable
  95:main.c        ****     CyDmaChEnable(txChannel, STORE_TD_CFG_ONCMPLT);
  92              		.loc 1 95 0
  93 0036 1D4B     		ldr	r3, .L6+12
  94 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  95 003a 0121     		movs	r1, #1
  96 003c 1846     		mov	r0, r3
  97 003e FFF7FEFF 		bl	CyDmaChEnable
  96:main.c        **** 
  97:main.c        ****     while (0u == (SPIM_ReadTxStatus() & SPIM_STS_SPI_DONE))
  98              		.loc 1 97 0
  99 0042 00BF     		nop
 100              	.L2:
 101              		.loc 1 97 0 is_stmt 0 discriminator 1
 102 0044 FFF7FEFF 		bl	SPIM_ReadTxStatus
 103 0048 0346     		mov	r3, r0
 104 004a 03F00103 		and	r3, r3, #1
 105 004e 002B     		cmp	r3, #0
 106 0050 F8D0     		beq	.L2
  98:main.c        ****     {
  99:main.c        ****     }
 100:main.c        ****     
 101:main.c        ****     UART_USB_PutString("Master Rx data:");
 107              		.loc 1 101 0 is_stmt 1
 108 0052 1748     		ldr	r0, .L6+16
 109 0054 FFF7FEFF 		bl	UART_USB_PutString
 102:main.c        ****     
 103:main.c        ****     for(i=0u; i<BUFFER_SIZE; i++)
 110              		.loc 1 103 0
 111 0058 0023     		movs	r3, #0
 112 005a FB71     		strb	r3, [r7, #7]
 113 005c 08E0     		b	.L3
 114              	.L4:
 104:main.c        ****     {
 105:main.c        ****         UART_USB_PutChar(rxBuffer[i]);
 115              		.loc 1 105 0 discriminator 3
 116 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 117 0060 144A     		ldr	r2, .L6+20
ARM GAS  C:\Users\ALBERT~1\AppData\Local\Temp\ccAn5F0d.s 			page 5


 118 0062 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 119 0064 1846     		mov	r0, r3
 120 0066 FFF7FEFF 		bl	UART_USB_PutChar
 103:main.c        ****     {
 121              		.loc 1 103 0 discriminator 3
 122 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 123 006c 0133     		adds	r3, r3, #1
 124 006e FB71     		strb	r3, [r7, #7]
 125              	.L3:
 103:main.c        ****     {
 126              		.loc 1 103 0 is_stmt 0 discriminator 1
 127 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 128 0072 072B     		cmp	r3, #7
 129 0074 F3D9     		bls	.L4
 130              	.L5:
 106:main.c        ****     }
 107:main.c        **** 
 108:main.c        ****     for(;;)
 109:main.c        ****     {
 110:main.c        **** 
 111:main.c        ****         SPIM_WriteTxData(0);
 131              		.loc 1 111 0 is_stmt 1 discriminator 1
 132 0076 0020     		movs	r0, #0
 133 0078 FFF7FEFF 		bl	SPIM_WriteTxData
 112:main.c        ****         //SPIM_WriteTxData(4);
 113:main.c        ****         //SPIM_Stop();
 114:main.c        ****         CyDelayUs(1);
 134              		.loc 1 114 0 discriminator 1
 135 007c 0120     		movs	r0, #1
 136 007e FFF7FEFF 		bl	CyDelayUs
 115:main.c        ****         SPIM_WriteTxData(0);
 137              		.loc 1 115 0 discriminator 1
 138 0082 0020     		movs	r0, #0
 139 0084 FFF7FEFF 		bl	SPIM_WriteTxData
 116:main.c        ****         SPIM_WriteTxData(16);
 140              		.loc 1 116 0 discriminator 1
 141 0088 1020     		movs	r0, #16
 142 008a FFF7FEFF 		bl	SPIM_WriteTxData
 117:main.c        ****         SPIM_ReadRxStatus();
 143              		.loc 1 117 0 discriminator 1
 144 008e FFF7FEFF 		bl	SPIM_ReadRxStatus
 118:main.c        ****         //SPIM_WriteTxData(16);
 119:main.c        ****         SPIM_ReadRxData();
 145              		.loc 1 119 0 discriminator 1
 146 0092 FFF7FEFF 		bl	SPIM_ReadRxData
 120:main.c        ****         CyDelay(1000);
 147              		.loc 1 120 0 discriminator 1
 148 0096 4FF47A70 		mov	r0, #1000
 149 009a FFF7FEFF 		bl	CyDelay
 121:main.c        ****         
 122:main.c        ****     }
 150              		.loc 1 122 0 discriminator 1
 151 009e EAE7     		b	.L5
 152              	.L7:
 153              		.align	2
 154              	.L6:
 155 00a0 00000000 		.word	.LC0
ARM GAS  C:\Users\ALBERT~1\AppData\Local\Temp\ccAn5F0d.s 			page 6


 156 00a4 0C000000 		.word	.LC1
 157 00a8 00000000 		.word	rxChannel
 158 00ac 00000000 		.word	txChannel
 159 00b0 14000000 		.word	.LC2
 160 00b4 00000000 		.word	rxBuffer
 161              		.cfi_endproc
 162              	.LFE63:
 163              		.size	main, .-main
 164              		.section	.text.DmaTxConfiguration,"ax",%progbits
 165              		.align	2
 166              		.global	DmaTxConfiguration
 167              		.thumb
 168              		.thumb_func
 169              		.type	DmaTxConfiguration, %function
 170              	DmaTxConfiguration:
 171              	.LFB64:
 123:main.c        **** }
 124:main.c        **** 
 125:main.c        ****     
 126:main.c        **** /*******************************************************************************
 127:main.c        **** * Function Name: DmaTxConfiguration
 128:main.c        **** ********************************************************************************
 129:main.c        **** * Summary:
 130:main.c        **** *  Configures the DMA transfer for TX direction
 131:main.c        **** *   
 132:main.c        **** * Parameters:
 133:main.c        **** *  None.
 134:main.c        **** *
 135:main.c        **** * Return:
 136:main.c        **** *  None.
 137:main.c        **** *
 138:main.c        **** *******************************************************************************/
 139:main.c        **** void DmaTxConfiguration()
 140:main.c        **** {
 172              		.loc 1 140 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176 0000 80B5     		push	{r7, lr}
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 7, -8
 179              		.cfi_offset 14, -4
 180 0002 00AF     		add	r7, sp, #0
 181              		.cfi_def_cfa_register 7
 141:main.c        ****     /* Init DMA, 1 byte bursts, each burst requires a request */ 
 142:main.c        ****     txChannel = DMA_TX_DmaInitialize(DMA_TX_BYTES_PER_BURST, DMA_TX_REQUEST_PER_BURST, 
 182              		.loc 1 142 0
 183 0004 4FF48043 		mov	r3, #16384
 184 0008 41F6FF72 		movw	r2, #8191
 185 000c 0121     		movs	r1, #1
 186 000e 0120     		movs	r0, #1
 187 0010 FFF7FEFF 		bl	DMA_TX_DmaInitialize
 188 0014 0346     		mov	r3, r0
 189 0016 1A46     		mov	r2, r3
 190 0018 104B     		ldr	r3, .L9
 191 001a 1A70     		strb	r2, [r3]
 143:main.c        ****                                         HI16(DMA_TX_SRC_BASE), HI16(DMA_TX_DST_BASE));
ARM GAS  C:\Users\ALBERT~1\AppData\Local\Temp\ccAn5F0d.s 			page 7


 144:main.c        **** 
 145:main.c        ****     txTD = CyDmaTdAllocate();
 192              		.loc 1 145 0
 193 001c FFF7FEFF 		bl	CyDmaTdAllocate
 194 0020 0346     		mov	r3, r0
 195 0022 1A46     		mov	r2, r3
 196 0024 0E4B     		ldr	r3, .L9+4
 197 0026 1A70     		strb	r2, [r3]
 146:main.c        **** 
 147:main.c        ****     /* Configure this Td as follows:
 148:main.c        ****     *  - Increment the source address, but not the destination address   
 149:main.c        ****     */
 150:main.c        ****     CyDmaTdSetConfiguration(txTD, BUFFER_SIZE, CY_DMA_DISABLE_TD, TD_INC_SRC_ADR);
 198              		.loc 1 150 0
 199 0028 0D4B     		ldr	r3, .L9+4
 200 002a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 201 002c 0123     		movs	r3, #1
 202 002e FE22     		movs	r2, #254
 203 0030 0821     		movs	r1, #8
 204 0032 FFF7FEFF 		bl	CyDmaTdSetConfiguration
 151:main.c        **** 
 152:main.c        ****     /* From the memory to the SPIM */
 153:main.c        ****     CyDmaTdSetAddress(txTD, LO16((uint32)txBuffer), LO16((uint32) SPIM_TXDATA_PTR));
 205              		.loc 1 153 0
 206 0036 0A4B     		ldr	r3, .L9+4
 207 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 208 003a 0A4A     		ldr	r2, .L9+8
 209 003c 91B2     		uxth	r1, r2
 210 003e 46F24452 		movw	r2, #25924
 211 0042 1846     		mov	r0, r3
 212 0044 FFF7FEFF 		bl	CyDmaTdSetAddress
 154:main.c        ****     
 155:main.c        ****     /* Associate the TD with the channel */
 156:main.c        ****     CyDmaChSetInitialTd(txChannel, txTD); 
 213              		.loc 1 156 0
 214 0048 044B     		ldr	r3, .L9
 215 004a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 216 004c 044B     		ldr	r3, .L9+4
 217 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 218 0050 1946     		mov	r1, r3
 219 0052 1046     		mov	r0, r2
 220 0054 FFF7FEFF 		bl	CyDmaChSetInitialTd
 157:main.c        **** }    
 221              		.loc 1 157 0
 222 0058 00BF     		nop
 223 005a 80BD     		pop	{r7, pc}
 224              	.L10:
 225              		.align	2
 226              	.L9:
 227 005c 00000000 		.word	txChannel
 228 0060 00000000 		.word	txTD
 229 0064 00000000 		.word	txBuffer
 230              		.cfi_endproc
 231              	.LFE64:
 232              		.size	DmaTxConfiguration, .-DmaTxConfiguration
 233              		.section	.text.DmaRxConfiguration,"ax",%progbits
 234              		.align	2
ARM GAS  C:\Users\ALBERT~1\AppData\Local\Temp\ccAn5F0d.s 			page 8


 235              		.global	DmaRxConfiguration
 236              		.thumb
 237              		.thumb_func
 238              		.type	DmaRxConfiguration, %function
 239              	DmaRxConfiguration:
 240              	.LFB65:
 158:main.c        **** 
 159:main.c        **** 
 160:main.c        **** /*******************************************************************************
 161:main.c        **** * Function Name: DmaRxConfiguration
 162:main.c        **** ********************************************************************************
 163:main.c        **** * Summary:
 164:main.c        **** *  Configures the DMA transfer for RX direction
 165:main.c        **** *   
 166:main.c        **** * Parameters:
 167:main.c        **** *  None.
 168:main.c        **** *
 169:main.c        **** * Return:
 170:main.c        **** *  None.
 171:main.c        **** *
 172:main.c        **** *******************************************************************************/
 173:main.c        **** void DmaRxConfiguration()
 174:main.c        **** { 
 241              		.loc 1 174 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 1, uses_anonymous_args = 0
 245 0000 80B5     		push	{r7, lr}
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 7, -8
 248              		.cfi_offset 14, -4
 249 0002 00AF     		add	r7, sp, #0
 250              		.cfi_def_cfa_register 7
 175:main.c        ****     /* Init DMA, 1 byte bursts, each burst requires a request */ 
 176:main.c        ****     rxChannel = DMA_RX_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 251              		.loc 1 176 0
 252 0004 41F6FF73 		movw	r3, #8191
 253 0008 4FF48042 		mov	r2, #16384
 254 000c 0121     		movs	r1, #1
 255 000e 0120     		movs	r0, #1
 256 0010 FFF7FEFF 		bl	DMA_RX_DmaInitialize
 257 0014 0346     		mov	r3, r0
 258 0016 1A46     		mov	r2, r3
 259 0018 104B     		ldr	r3, .L12
 260 001a 1A70     		strb	r2, [r3]
 177:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
 178:main.c        **** 
 179:main.c        ****     rxTD = CyDmaTdAllocate();
 261              		.loc 1 179 0
 262 001c FFF7FEFF 		bl	CyDmaTdAllocate
 263 0020 0346     		mov	r3, r0
 264 0022 1A46     		mov	r2, r3
 265 0024 0E4B     		ldr	r3, .L12+4
 266 0026 1A70     		strb	r2, [r3]
 180:main.c        ****     
 181:main.c        ****     /* Configure this Td as follows:
 182:main.c        ****     *  - Increment the destination address, but not the source address
ARM GAS  C:\Users\ALBERT~1\AppData\Local\Temp\ccAn5F0d.s 			page 9


 183:main.c        ****     */
 184:main.c        ****     CyDmaTdSetConfiguration(rxTD, BUFFER_SIZE, CY_DMA_DISABLE_TD, TD_INC_DST_ADR);
 267              		.loc 1 184 0
 268 0028 0D4B     		ldr	r3, .L12+4
 269 002a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 270 002c 0223     		movs	r3, #2
 271 002e FE22     		movs	r2, #254
 272 0030 0821     		movs	r1, #8
 273 0032 FFF7FEFF 		bl	CyDmaTdSetConfiguration
 185:main.c        **** 
 186:main.c        ****     /* From the SPIM to the memory */
 187:main.c        ****     CyDmaTdSetAddress(rxTD, LO16((uint32)SPIM_RXDATA_PTR), LO16((uint32)rxBuffer));
 274              		.loc 1 187 0
 275 0036 0A4B     		ldr	r3, .L12+4
 276 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 277 003a 0A4A     		ldr	r2, .L12+8
 278 003c 92B2     		uxth	r2, r2
 279 003e 46F25451 		movw	r1, #25940
 280 0042 1846     		mov	r0, r3
 281 0044 FFF7FEFF 		bl	CyDmaTdSetAddress
 188:main.c        **** 
 189:main.c        ****     /* Associate the TD with the channel */
 190:main.c        ****     CyDmaChSetInitialTd(rxChannel, rxTD);
 282              		.loc 1 190 0
 283 0048 044B     		ldr	r3, .L12
 284 004a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 285 004c 044B     		ldr	r3, .L12+4
 286 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 287 0050 1946     		mov	r1, r3
 288 0052 1046     		mov	r0, r2
 289 0054 FFF7FEFF 		bl	CyDmaChSetInitialTd
 191:main.c        **** }
 290              		.loc 1 191 0
 291 0058 00BF     		nop
 292 005a 80BD     		pop	{r7, pc}
 293              	.L13:
 294              		.align	2
 295              	.L12:
 296 005c 00000000 		.word	rxChannel
 297 0060 00000000 		.word	rxTD
 298 0064 00000000 		.word	rxBuffer
 299              		.cfi_endproc
 300              	.LFE65:
 301              		.size	DmaRxConfiguration, .-DmaRxConfiguration
 302              		.text
 303              	.Letext0:
 304              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 305              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 306              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 307              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 308              		.section	.debug_info,"",%progbits
 309              	.Ldebug_info0:
 310 0000 A5010000 		.4byte	0x1a5
 311 0004 0400     		.2byte	0x4
 312 0006 00000000 		.4byte	.Ldebug_abbrev0
 313 000a 04       		.byte	0x4
 314 000b 01       		.uleb128 0x1
ARM GAS  C:\Users\ALBERT~1\AppData\Local\Temp\ccAn5F0d.s 			page 10


 315 000c 00000000 		.4byte	.LASF29
 316 0010 0C       		.byte	0xc
 317 0011 AE010000 		.4byte	.LASF30
 318 0015 A2000000 		.4byte	.LASF31
 319 0019 00000000 		.4byte	.Ldebug_ranges0+0
 320 001d 00000000 		.4byte	0
 321 0021 00000000 		.4byte	.Ldebug_line0
 322 0025 02       		.uleb128 0x2
 323 0026 01       		.byte	0x1
 324 0027 06       		.byte	0x6
 325 0028 0E020000 		.4byte	.LASF0
 326 002c 02       		.uleb128 0x2
 327 002d 01       		.byte	0x1
 328 002e 08       		.byte	0x8
 329 002f FD000000 		.4byte	.LASF1
 330 0033 02       		.uleb128 0x2
 331 0034 02       		.byte	0x2
 332 0035 05       		.byte	0x5
 333 0036 C3010000 		.4byte	.LASF2
 334 003a 02       		.uleb128 0x2
 335 003b 02       		.byte	0x2
 336 003c 07       		.byte	0x7
 337 003d 2C010000 		.4byte	.LASF3
 338 0041 03       		.uleb128 0x3
 339 0042 98000000 		.4byte	.LASF9
 340 0046 02       		.byte	0x2
 341 0047 3F       		.byte	0x3f
 342 0048 4C000000 		.4byte	0x4c
 343 004c 02       		.uleb128 0x2
 344 004d 04       		.byte	0x4
 345 004e 05       		.byte	0x5
 346 004f F9010000 		.4byte	.LASF4
 347 0053 02       		.uleb128 0x2
 348 0054 04       		.byte	0x4
 349 0055 07       		.byte	0x7
 350 0056 1A010000 		.4byte	.LASF5
 351 005a 02       		.uleb128 0x2
 352 005b 08       		.byte	0x8
 353 005c 05       		.byte	0x5
 354 005d A0010000 		.4byte	.LASF6
 355 0061 02       		.uleb128 0x2
 356 0062 08       		.byte	0x8
 357 0063 07       		.byte	0x7
 358 0064 6B010000 		.4byte	.LASF7
 359 0068 04       		.uleb128 0x4
 360 0069 04       		.byte	0x4
 361 006a 05       		.byte	0x5
 362 006b 696E7400 		.ascii	"int\000"
 363 006f 02       		.uleb128 0x2
 364 0070 04       		.byte	0x4
 365 0071 07       		.byte	0x7
 366 0072 5E010000 		.4byte	.LASF8
 367 0076 03       		.uleb128 0x3
 368 0077 8F010000 		.4byte	.LASF10
 369 007b 03       		.byte	0x3
 370 007c 2C       		.byte	0x2c
 371 007d 41000000 		.4byte	0x41
ARM GAS  C:\Users\ALBERT~1\AppData\Local\Temp\ccAn5F0d.s 			page 11


 372 0081 05       		.uleb128 0x5
 373 0082 CD010000 		.4byte	.LASF11
 374 0086 04       		.byte	0x4
 375 0087 9201     		.2byte	0x192
 376 0089 2C000000 		.4byte	0x2c
 377 008d 05       		.uleb128 0x5
 378 008e 50010000 		.4byte	.LASF12
 379 0092 04       		.byte	0x4
 380 0093 9301     		.2byte	0x193
 381 0095 3A000000 		.4byte	0x3a
 382 0099 05       		.uleb128 0x5
 383 009a 57010000 		.4byte	.LASF13
 384 009e 04       		.byte	0x4
 385 009f 9401     		.2byte	0x194
 386 00a1 53000000 		.4byte	0x53
 387 00a5 02       		.uleb128 0x2
 388 00a6 04       		.byte	0x4
 389 00a7 04       		.byte	0x4
 390 00a8 F7000000 		.4byte	.LASF14
 391 00ac 02       		.uleb128 0x2
 392 00ad 08       		.byte	0x8
 393 00ae 04       		.byte	0x4
 394 00af 44010000 		.4byte	.LASF15
 395 00b3 02       		.uleb128 0x2
 396 00b4 01       		.byte	0x1
 397 00b5 08       		.byte	0x8
 398 00b6 B5010000 		.4byte	.LASF16
 399 00ba 05       		.uleb128 0x5
 400 00bb 15010000 		.4byte	.LASF17
 401 00bf 04       		.byte	0x4
 402 00c0 3C02     		.2byte	0x23c
 403 00c2 C6000000 		.4byte	0xc6
 404 00c6 06       		.uleb128 0x6
 405 00c7 81000000 		.4byte	0x81
 406 00cb 02       		.uleb128 0x2
 407 00cc 08       		.byte	0x8
 408 00cd 04       		.byte	0x4
 409 00ce 02020000 		.4byte	.LASF18
 410 00d2 02       		.uleb128 0x2
 411 00d3 04       		.byte	0x4
 412 00d4 07       		.byte	0x7
 413 00d5 97010000 		.4byte	.LASF19
 414 00d9 07       		.uleb128 0x7
 415 00da 4B010000 		.4byte	.LASF32
 416 00de 01       		.byte	0x1
 417 00df 50       		.byte	0x50
 418 00e0 68000000 		.4byte	0x68
 419 00e4 00000000 		.4byte	.LFB63
 420 00e8 B8000000 		.4byte	.LFE63-.LFB63
 421 00ec 01       		.uleb128 0x1
 422 00ed 9C       		.byte	0x9c
 423 00ee FF000000 		.4byte	0xff
 424 00f2 08       		.uleb128 0x8
 425 00f3 6900     		.ascii	"i\000"
 426 00f5 01       		.byte	0x1
 427 00f6 52       		.byte	0x52
 428 00f7 81000000 		.4byte	0x81
ARM GAS  C:\Users\ALBERT~1\AppData\Local\Temp\ccAn5F0d.s 			page 12


 429 00fb 02       		.uleb128 0x2
 430 00fc 91       		.byte	0x91
 431 00fd 77       		.sleb128 -9
 432 00fe 00       		.byte	0
 433 00ff 09       		.uleb128 0x9
 434 0100 D3010000 		.4byte	.LASF20
 435 0104 01       		.byte	0x1
 436 0105 8B       		.byte	0x8b
 437 0106 00000000 		.4byte	.LFB64
 438 010a 68000000 		.4byte	.LFE64-.LFB64
 439 010e 01       		.uleb128 0x1
 440 010f 9C       		.byte	0x9c
 441 0110 09       		.uleb128 0x9
 442 0111 E6010000 		.4byte	.LASF21
 443 0115 01       		.byte	0x1
 444 0116 AD       		.byte	0xad
 445 0117 00000000 		.4byte	.LFB65
 446 011b 68000000 		.4byte	.LFE65-.LFB65
 447 011f 01       		.uleb128 0x1
 448 0120 9C       		.byte	0x9c
 449 0121 0A       		.uleb128 0xa
 450 0122 82010000 		.4byte	.LASF22
 451 0126 05       		.byte	0x5
 452 0127 1207     		.2byte	0x712
 453 0129 2D010000 		.4byte	0x12d
 454 012d 06       		.uleb128 0x6
 455 012e 76000000 		.4byte	0x76
 456 0132 0B       		.uleb128 0xb
 457 0133 8E000000 		.4byte	.LASF23
 458 0137 01       		.byte	0x1
 459 0138 34       		.byte	0x34
 460 0139 81000000 		.4byte	0x81
 461 013d 05       		.uleb128 0x5
 462 013e 03       		.byte	0x3
 463 013f 00000000 		.4byte	txChannel
 464 0143 0B       		.uleb128 0xb
 465 0144 3F010000 		.4byte	.LASF24
 466 0148 01       		.byte	0x1
 467 0149 35       		.byte	0x35
 468 014a 81000000 		.4byte	0x81
 469 014e 05       		.uleb128 0x5
 470 014f 03       		.byte	0x3
 471 0150 00000000 		.4byte	txTD
 472 0154 0B       		.uleb128 0xb
 473 0155 0B010000 		.4byte	.LASF25
 474 0159 01       		.byte	0x1
 475 015a 38       		.byte	0x38
 476 015b 81000000 		.4byte	0x81
 477 015f 05       		.uleb128 0x5
 478 0160 03       		.byte	0x3
 479 0161 00000000 		.4byte	rxChannel
 480 0165 0B       		.uleb128 0xb
 481 0166 1A020000 		.4byte	.LASF26
 482 016a 01       		.byte	0x1
 483 016b 39       		.byte	0x39
 484 016c 81000000 		.4byte	0x81
 485 0170 05       		.uleb128 0x5
ARM GAS  C:\Users\ALBERT~1\AppData\Local\Temp\ccAn5F0d.s 			page 13


 486 0171 03       		.byte	0x3
 487 0172 00000000 		.4byte	rxTD
 488 0176 0C       		.uleb128 0xc
 489 0177 81000000 		.4byte	0x81
 490 017b 86010000 		.4byte	0x186
 491 017f 0D       		.uleb128 0xd
 492 0180 D2000000 		.4byte	0xd2
 493 0184 07       		.byte	0x7
 494 0185 00       		.byte	0
 495 0186 0B       		.uleb128 0xb
 496 0187 BA010000 		.4byte	.LASF27
 497 018b 01       		.byte	0x1
 498 018c 3C       		.byte	0x3c
 499 018d 76010000 		.4byte	0x176
 500 0191 05       		.uleb128 0x5
 501 0192 03       		.byte	0x3
 502 0193 00000000 		.4byte	txBuffer
 503 0197 0B       		.uleb128 0xb
 504 0198 EE000000 		.4byte	.LASF28
 505 019c 01       		.byte	0x1
 506 019d 3D       		.byte	0x3d
 507 019e 76010000 		.4byte	0x176
 508 01a2 05       		.uleb128 0x5
 509 01a3 03       		.byte	0x3
 510 01a4 00000000 		.4byte	rxBuffer
 511 01a8 00       		.byte	0
 512              		.section	.debug_abbrev,"",%progbits
 513              	.Ldebug_abbrev0:
 514 0000 01       		.uleb128 0x1
 515 0001 11       		.uleb128 0x11
 516 0002 01       		.byte	0x1
 517 0003 25       		.uleb128 0x25
 518 0004 0E       		.uleb128 0xe
 519 0005 13       		.uleb128 0x13
 520 0006 0B       		.uleb128 0xb
 521 0007 03       		.uleb128 0x3
 522 0008 0E       		.uleb128 0xe
 523 0009 1B       		.uleb128 0x1b
 524 000a 0E       		.uleb128 0xe
 525 000b 55       		.uleb128 0x55
 526 000c 17       		.uleb128 0x17
 527 000d 11       		.uleb128 0x11
 528 000e 01       		.uleb128 0x1
 529 000f 10       		.uleb128 0x10
 530 0010 17       		.uleb128 0x17
 531 0011 00       		.byte	0
 532 0012 00       		.byte	0
 533 0013 02       		.uleb128 0x2
 534 0014 24       		.uleb128 0x24
 535 0015 00       		.byte	0
 536 0016 0B       		.uleb128 0xb
 537 0017 0B       		.uleb128 0xb
 538 0018 3E       		.uleb128 0x3e
 539 0019 0B       		.uleb128 0xb
 540 001a 03       		.uleb128 0x3
 541 001b 0E       		.uleb128 0xe
 542 001c 00       		.byte	0
ARM GAS  C:\Users\ALBERT~1\AppData\Local\Temp\ccAn5F0d.s 			page 14


 543 001d 00       		.byte	0
 544 001e 03       		.uleb128 0x3
 545 001f 16       		.uleb128 0x16
 546 0020 00       		.byte	0
 547 0021 03       		.uleb128 0x3
 548 0022 0E       		.uleb128 0xe
 549 0023 3A       		.uleb128 0x3a
 550 0024 0B       		.uleb128 0xb
 551 0025 3B       		.uleb128 0x3b
 552 0026 0B       		.uleb128 0xb
 553 0027 49       		.uleb128 0x49
 554 0028 13       		.uleb128 0x13
 555 0029 00       		.byte	0
 556 002a 00       		.byte	0
 557 002b 04       		.uleb128 0x4
 558 002c 24       		.uleb128 0x24
 559 002d 00       		.byte	0
 560 002e 0B       		.uleb128 0xb
 561 002f 0B       		.uleb128 0xb
 562 0030 3E       		.uleb128 0x3e
 563 0031 0B       		.uleb128 0xb
 564 0032 03       		.uleb128 0x3
 565 0033 08       		.uleb128 0x8
 566 0034 00       		.byte	0
 567 0035 00       		.byte	0
 568 0036 05       		.uleb128 0x5
 569 0037 16       		.uleb128 0x16
 570 0038 00       		.byte	0
 571 0039 03       		.uleb128 0x3
 572 003a 0E       		.uleb128 0xe
 573 003b 3A       		.uleb128 0x3a
 574 003c 0B       		.uleb128 0xb
 575 003d 3B       		.uleb128 0x3b
 576 003e 05       		.uleb128 0x5
 577 003f 49       		.uleb128 0x49
 578 0040 13       		.uleb128 0x13
 579 0041 00       		.byte	0
 580 0042 00       		.byte	0
 581 0043 06       		.uleb128 0x6
 582 0044 35       		.uleb128 0x35
 583 0045 00       		.byte	0
 584 0046 49       		.uleb128 0x49
 585 0047 13       		.uleb128 0x13
 586 0048 00       		.byte	0
 587 0049 00       		.byte	0
 588 004a 07       		.uleb128 0x7
 589 004b 2E       		.uleb128 0x2e
 590 004c 01       		.byte	0x1
 591 004d 3F       		.uleb128 0x3f
 592 004e 19       		.uleb128 0x19
 593 004f 03       		.uleb128 0x3
 594 0050 0E       		.uleb128 0xe
 595 0051 3A       		.uleb128 0x3a
 596 0052 0B       		.uleb128 0xb
 597 0053 3B       		.uleb128 0x3b
 598 0054 0B       		.uleb128 0xb
 599 0055 49       		.uleb128 0x49
ARM GAS  C:\Users\ALBERT~1\AppData\Local\Temp\ccAn5F0d.s 			page 15


 600 0056 13       		.uleb128 0x13
 601 0057 11       		.uleb128 0x11
 602 0058 01       		.uleb128 0x1
 603 0059 12       		.uleb128 0x12
 604 005a 06       		.uleb128 0x6
 605 005b 40       		.uleb128 0x40
 606 005c 18       		.uleb128 0x18
 607 005d 9642     		.uleb128 0x2116
 608 005f 19       		.uleb128 0x19
 609 0060 01       		.uleb128 0x1
 610 0061 13       		.uleb128 0x13
 611 0062 00       		.byte	0
 612 0063 00       		.byte	0
 613 0064 08       		.uleb128 0x8
 614 0065 34       		.uleb128 0x34
 615 0066 00       		.byte	0
 616 0067 03       		.uleb128 0x3
 617 0068 08       		.uleb128 0x8
 618 0069 3A       		.uleb128 0x3a
 619 006a 0B       		.uleb128 0xb
 620 006b 3B       		.uleb128 0x3b
 621 006c 0B       		.uleb128 0xb
 622 006d 49       		.uleb128 0x49
 623 006e 13       		.uleb128 0x13
 624 006f 02       		.uleb128 0x2
 625 0070 18       		.uleb128 0x18
 626 0071 00       		.byte	0
 627 0072 00       		.byte	0
 628 0073 09       		.uleb128 0x9
 629 0074 2E       		.uleb128 0x2e
 630 0075 00       		.byte	0
 631 0076 3F       		.uleb128 0x3f
 632 0077 19       		.uleb128 0x19
 633 0078 03       		.uleb128 0x3
 634 0079 0E       		.uleb128 0xe
 635 007a 3A       		.uleb128 0x3a
 636 007b 0B       		.uleb128 0xb
 637 007c 3B       		.uleb128 0x3b
 638 007d 0B       		.uleb128 0xb
 639 007e 27       		.uleb128 0x27
 640 007f 19       		.uleb128 0x19
 641 0080 11       		.uleb128 0x11
 642 0081 01       		.uleb128 0x1
 643 0082 12       		.uleb128 0x12
 644 0083 06       		.uleb128 0x6
 645 0084 40       		.uleb128 0x40
 646 0085 18       		.uleb128 0x18
 647 0086 9642     		.uleb128 0x2116
 648 0088 19       		.uleb128 0x19
 649 0089 00       		.byte	0
 650 008a 00       		.byte	0
 651 008b 0A       		.uleb128 0xa
 652 008c 34       		.uleb128 0x34
 653 008d 00       		.byte	0
 654 008e 03       		.uleb128 0x3
 655 008f 0E       		.uleb128 0xe
 656 0090 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ALBERT~1\AppData\Local\Temp\ccAn5F0d.s 			page 16


 657 0091 0B       		.uleb128 0xb
 658 0092 3B       		.uleb128 0x3b
 659 0093 05       		.uleb128 0x5
 660 0094 49       		.uleb128 0x49
 661 0095 13       		.uleb128 0x13
 662 0096 3F       		.uleb128 0x3f
 663 0097 19       		.uleb128 0x19
 664 0098 3C       		.uleb128 0x3c
 665 0099 19       		.uleb128 0x19
 666 009a 00       		.byte	0
 667 009b 00       		.byte	0
 668 009c 0B       		.uleb128 0xb
 669 009d 34       		.uleb128 0x34
 670 009e 00       		.byte	0
 671 009f 03       		.uleb128 0x3
 672 00a0 0E       		.uleb128 0xe
 673 00a1 3A       		.uleb128 0x3a
 674 00a2 0B       		.uleb128 0xb
 675 00a3 3B       		.uleb128 0x3b
 676 00a4 0B       		.uleb128 0xb
 677 00a5 49       		.uleb128 0x49
 678 00a6 13       		.uleb128 0x13
 679 00a7 3F       		.uleb128 0x3f
 680 00a8 19       		.uleb128 0x19
 681 00a9 02       		.uleb128 0x2
 682 00aa 18       		.uleb128 0x18
 683 00ab 00       		.byte	0
 684 00ac 00       		.byte	0
 685 00ad 0C       		.uleb128 0xc
 686 00ae 01       		.uleb128 0x1
 687 00af 01       		.byte	0x1
 688 00b0 49       		.uleb128 0x49
 689 00b1 13       		.uleb128 0x13
 690 00b2 01       		.uleb128 0x1
 691 00b3 13       		.uleb128 0x13
 692 00b4 00       		.byte	0
 693 00b5 00       		.byte	0
 694 00b6 0D       		.uleb128 0xd
 695 00b7 21       		.uleb128 0x21
 696 00b8 00       		.byte	0
 697 00b9 49       		.uleb128 0x49
 698 00ba 13       		.uleb128 0x13
 699 00bb 2F       		.uleb128 0x2f
 700 00bc 0B       		.uleb128 0xb
 701 00bd 00       		.byte	0
 702 00be 00       		.byte	0
 703 00bf 00       		.byte	0
 704              		.section	.debug_aranges,"",%progbits
 705 0000 2C000000 		.4byte	0x2c
 706 0004 0200     		.2byte	0x2
 707 0006 00000000 		.4byte	.Ldebug_info0
 708 000a 04       		.byte	0x4
 709 000b 00       		.byte	0
 710 000c 0000     		.2byte	0
 711 000e 0000     		.2byte	0
 712 0010 00000000 		.4byte	.LFB63
 713 0014 B8000000 		.4byte	.LFE63-.LFB63
ARM GAS  C:\Users\ALBERT~1\AppData\Local\Temp\ccAn5F0d.s 			page 17


 714 0018 00000000 		.4byte	.LFB64
 715 001c 68000000 		.4byte	.LFE64-.LFB64
 716 0020 00000000 		.4byte	.LFB65
 717 0024 68000000 		.4byte	.LFE65-.LFB65
 718 0028 00000000 		.4byte	0
 719 002c 00000000 		.4byte	0
 720              		.section	.debug_ranges,"",%progbits
 721              	.Ldebug_ranges0:
 722 0000 00000000 		.4byte	.LFB63
 723 0004 B8000000 		.4byte	.LFE63
 724 0008 00000000 		.4byte	.LFB64
 725 000c 68000000 		.4byte	.LFE64
 726 0010 00000000 		.4byte	.LFB65
 727 0014 68000000 		.4byte	.LFE65
 728 0018 00000000 		.4byte	0
 729 001c 00000000 		.4byte	0
 730              		.section	.debug_line,"",%progbits
 731              	.Ldebug_line0:
 732 0000 DA010000 		.section	.debug_str,"MS",%progbits,1
 732      02004C01 
 732      00000201 
 732      FB0E0D00 
 732      01010101 
 733              	.LASF29:
 734 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 734      43313120 
 734      352E342E 
 734      31203230 
 734      31363036 
 735 0033 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 735      20726576 
 735      6973696F 
 735      6E203233 
 735      37373135 
 736 0066 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 736      66756E63 
 736      74696F6E 
 736      2D736563 
 736      74696F6E 
 737              	.LASF23:
 738 008e 74784368 		.ascii	"txChannel\000"
 738      616E6E65 
 738      6C00
 739              	.LASF9:
 740 0098 5F5F696E 		.ascii	"__int32_t\000"
 740      7433325F 
 740      7400
 741              	.LASF31:
 742 00a2 433A5C55 		.ascii	"C:\\Users\\Albert Sandager\\Documents\\PSoC Creator"
 742      73657273 
 742      5C416C62 
 742      65727420 
 742      53616E64 
 743 00d1 5C535049 		.ascii	"\\SPI_Master\\SPI_Master.cydsn\000"
 743      5F4D6173 
 743      7465725C 
 743      5350495F 
ARM GAS  C:\Users\ALBERT~1\AppData\Local\Temp\ccAn5F0d.s 			page 18


 743      4D617374 
 744              	.LASF28:
 745 00ee 72784275 		.ascii	"rxBuffer\000"
 745      66666572 
 745      00
 746              	.LASF14:
 747 00f7 666C6F61 		.ascii	"float\000"
 747      7400
 748              	.LASF1:
 749 00fd 756E7369 		.ascii	"unsigned char\000"
 749      676E6564 
 749      20636861 
 749      7200
 750              	.LASF25:
 751 010b 72784368 		.ascii	"rxChannel\000"
 751      616E6E65 
 751      6C00
 752              	.LASF17:
 753 0115 72656738 		.ascii	"reg8\000"
 753      00
 754              	.LASF5:
 755 011a 6C6F6E67 		.ascii	"long unsigned int\000"
 755      20756E73 
 755      69676E65 
 755      6420696E 
 755      7400
 756              	.LASF3:
 757 012c 73686F72 		.ascii	"short unsigned int\000"
 757      7420756E 
 757      7369676E 
 757      65642069 
 757      6E7400
 758              	.LASF24:
 759 013f 74785444 		.ascii	"txTD\000"
 759      00
 760              	.LASF15:
 761 0144 646F7562 		.ascii	"double\000"
 761      6C6500
 762              	.LASF32:
 763 014b 6D61696E 		.ascii	"main\000"
 763      00
 764              	.LASF12:
 765 0150 75696E74 		.ascii	"uint16\000"
 765      313600
 766              	.LASF13:
 767 0157 75696E74 		.ascii	"uint32\000"
 767      333200
 768              	.LASF8:
 769 015e 756E7369 		.ascii	"unsigned int\000"
 769      676E6564 
 769      20696E74 
 769      00
 770              	.LASF7:
 771 016b 6C6F6E67 		.ascii	"long long unsigned int\000"
 771      206C6F6E 
 771      6720756E 
 771      7369676E 
ARM GAS  C:\Users\ALBERT~1\AppData\Local\Temp\ccAn5F0d.s 			page 19


 771      65642069 
 772              	.LASF22:
 773 0182 49544D5F 		.ascii	"ITM_RxBuffer\000"
 773      52784275 
 773      66666572 
 773      00
 774              	.LASF10:
 775 018f 696E7433 		.ascii	"int32_t\000"
 775      325F7400 
 776              	.LASF19:
 777 0197 73697A65 		.ascii	"sizetype\000"
 777      74797065 
 777      00
 778              	.LASF6:
 779 01a0 6C6F6E67 		.ascii	"long long int\000"
 779      206C6F6E 
 779      6720696E 
 779      7400
 780              	.LASF30:
 781 01ae 6D61696E 		.ascii	"main.c\000"
 781      2E6300
 782              	.LASF16:
 783 01b5 63686172 		.ascii	"char\000"
 783      00
 784              	.LASF27:
 785 01ba 74784275 		.ascii	"txBuffer\000"
 785      66666572 
 785      00
 786              	.LASF2:
 787 01c3 73686F72 		.ascii	"short int\000"
 787      7420696E 
 787      7400
 788              	.LASF11:
 789 01cd 75696E74 		.ascii	"uint8\000"
 789      3800
 790              	.LASF20:
 791 01d3 446D6154 		.ascii	"DmaTxConfiguration\000"
 791      78436F6E 
 791      66696775 
 791      72617469 
 791      6F6E00
 792              	.LASF21:
 793 01e6 446D6152 		.ascii	"DmaRxConfiguration\000"
 793      78436F6E 
 793      66696775 
 793      72617469 
 793      6F6E00
 794              	.LASF4:
 795 01f9 6C6F6E67 		.ascii	"long int\000"
 795      20696E74 
 795      00
 796              	.LASF18:
 797 0202 6C6F6E67 		.ascii	"long double\000"
 797      20646F75 
 797      626C6500 
 798              	.LASF0:
 799 020e 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\ALBERT~1\AppData\Local\Temp\ccAn5F0d.s 			page 20


 799      65642063 
 799      68617200 
 800              	.LASF26:
 801 021a 72785444 		.ascii	"rxTD\000"
 801      00
 802              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
